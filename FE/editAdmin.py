#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 7.4
#  in conjunction with Tcl version 8.6
#    Jul 20, 2022 10:59:27 AM CEST  platform: Windows NT

import sys
import os
sys.path.append(os.path.abspath("."))

import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *
from tkinter import  messagebox
from webServices.configuration import Configuration
import base64


class adminEdit:
    def __init__(self, top: tk.Tk):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = 'gray40' # X11 color: #666666
        _ana1color = '#c3c3c3' # Closest X11 color: 'gray76'
        _ana2color = 'beige' # X11 color: #f5f5dc
        _tabfg1 = 'black' 
        _tabfg2 = 'black' 
        _tabbg1 = 'grey75' 
        _tabbg2 = 'grey89' 
        _bgmode = 'light' 

        top.geometry("600x450+203+136")
        top.minsize(116, 1)
        top.maxsize(1366, 746)
        top.resizable(1,  1)
        top.title("Admin Edit")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.top = top

        self.frame2 = tk.Frame(self.top)
        self.frame2.place(relx=0.1, rely=0.089, relheight=0.789, relwidth=0.842)
        self.frame2.configure(relief='groove')
        self.frame2.configure(borderwidth="2")
        self.frame2.configure(relief="groove")
        self.frame2.configure(background="#3333ff")
        self.frame2.configure(highlightbackground="#d9d9d9")
        self.frame2.configure(highlightcolor="black")

        self.Label1 = tk.Label(self.frame2)
        self.Label1.place(relx=0.396, rely=0.085, height=56, width=154)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(anchor='w')
        self.Label1.configure(background="#3333ff")
        self.Label1.configure(compound='left')
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(font="-family {Arial} -size 18 -weight bold")
        self.Label1.configure(foreground="#ffffff")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''EDIT ADMIN''')

        self.Label2 = tk.Label(self.frame2)
        self.Label2.place(relx=0.059, rely=0.225, height=56, width=114)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(anchor='w')
        self.Label2.configure(background="#3333ff")
        self.Label2.configure(compound='left')
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(font="-family {Arial} -size 16 -weight bold -slant italic -underline 1")
        self.Label2.configure(foreground="#ffffff")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''Username''')

        self.Label3 = tk.Label(self.frame2)
        self.Label3.place(relx=0.059, rely=0.366, height=56, width=114)
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(anchor='w')
        self.Label3.configure(background="#3333ff")
        self.Label3.configure(compound='left')
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(font="-family {Arial} -size 16 -weight bold -slant italic -underline 1")
        self.Label3.configure(foreground="#ffffff")
        self.Label3.configure(highlightbackground="#d9d9d9")
        self.Label3.configure(highlightcolor="black")
        self.Label3.configure(text='''Password''')

        self.usernameEntity = tk.Entry(self.frame2)
        self.usernameEntity.place(relx=0.416, rely=0.254, height=30
                , relwidth=0.404)
        self.usernameEntity.configure(background="white")
        self.usernameEntity.configure(disabledforeground="#a3a3a3")
        self.usernameEntity.configure(font="TkFixedFont")
        self.usernameEntity.configure(foreground="#000000")
        self.usernameEntity.configure(highlightbackground="#d9d9d9")
        self.usernameEntity.configure(highlightcolor="black")
        self.usernameEntity.configure(insertbackground="black")
        self.usernameEntity.configure(selectbackground="#c4c4c4")
        self.usernameEntity.configure(selectforeground="black")

        self.passEntity = tk.Entry(self.frame2)
        self.passEntity.place(relx=0.416, rely=0.394, height=30, relwidth=0.404)
        self.passEntity.configure(background="white")
        self.passEntity.configure(disabledforeground="#a3a3a3")
        self.passEntity.configure(font="TkFixedFont")
        self.passEntity.configure(foreground="#000000")
        self.passEntity.configure(highlightbackground="#d9d9d9")
        self.passEntity.configure(highlightcolor="black")
        self.passEntity.configure(insertbackground="black")
        self.passEntity.configure(selectbackground="#c4c4c4")
        self.passEntity.configure(selectforeground="black")
        self.passEntity.configure(show="*")
        

        self.Label4 = tk.Label(self.frame2)
        self.Label4.place(relx=0.059, rely=0.507, height=56, width=154)
        self.Label4.configure(activebackground="#f9f9f9")
        self.Label4.configure(anchor='w')
        self.Label4.configure(background="#3333ff")
        self.Label4.configure(compound='left')
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(font="-family {Arial} -size 16 -weight bold -slant italic -underline 1")
        self.Label4.configure(foreground="#ffffff")
        self.Label4.configure(highlightbackground="#d9d9d9")
        self.Label4.configure(highlightcolor="black")
        self.Label4.configure(text='''Confirm Pass''')

        self.passConfEntity = tk.Entry(self.frame2)
        self.passConfEntity.place(relx=0.416, rely=0.535, height=30
                , relwidth=0.404)
        self.passConfEntity.configure(background="white")
        self.passConfEntity.configure(disabledforeground="#a3a3a3")
        self.passConfEntity.configure(font="TkFixedFont")
        self.passConfEntity.configure(foreground="#000000")
        self.passConfEntity.configure(highlightbackground="#d9d9d9")
        self.passConfEntity.configure(highlightcolor="black")
        self.passConfEntity.configure(insertbackground="black")
        self.passConfEntity.configure(selectbackground="#c4c4c4")
        self.passConfEntity.configure(selectforeground="black")
        self.passConfEntity.configure(show="*")

        self.saveBut = tk.Button(self.frame2)
        self.saveBut.place(relx=0.554, rely=0.704, height=34, width=127)
        self.saveBut.configure(activebackground="beige")
        self.saveBut.configure(activeforeground="#000000")
        self.saveBut.configure(background="#00d500")
        self.saveBut.configure(compound='left')
        self.saveBut.configure(disabledforeground="#a3a3a3")
        self.saveBut.configure(font="-family {Arial} -size 16 -weight bold")
        self.saveBut.configure(foreground="#000000")
        self.saveBut.configure(highlightbackground="#d9d9d9")
        self.saveBut.configure(highlightcolor="black")
        self.saveBut.configure(pady="0")
        self.saveBut.configure(text='''Save''')
        self.saveBut.configure(command=self.buttonAction)
    
    
    def buttonAction(self):
        username = self.usernameEntity.get().strip()
        password = self.passEntity.get().strip()
        confPass = self.passConfEntity.get().strip()
        
        if confPass == password:
            f  = open(Configuration.LOGIN_CREDENTIALS , "w")
            f.write(base64.b64encode(username.encode()).decode() + "\n")
            f.write(base64.b64encode(confPass.encode()).decode())
            f.close()
            self.top.destroy()
            pass
        
        else:
            messagebox.showerror("Password and confirm password does not match.")
            
        
        pass

if __name__ == '__main__':
    root = tk.Tk()
    
    root.protocol( 'WM_DELETE_WINDOW' , root.destroy)
    _configWindow = adminEdit(root)
    root.mainloop()
    pass
     




